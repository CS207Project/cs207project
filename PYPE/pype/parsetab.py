
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9B892EF756A6B6A7120132C78D76B619'
    
_lr_action_items = {'$end':([2,4,5,6,9,10,26,28,],[0,-1,-5,-4,-2,-3,-7,-6,]),'LPAREN':([0,4,5,6,7,9,10,11,12,14,15,16,18,19,20,21,22,23,24,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[3,3,-5,-4,13,-2,-3,-28,-27,-9,13,-26,31,13,31,13,13,13,13,-7,-8,-6,-11,-15,-17,31,-30,13,-13,31,13,13,13,-21,13,13,-10,-14,-29,-25,-12,-23,-22,-24,-20,-19,-16,]),'NUMBER':([7,11,12,14,15,16,19,21,22,23,24,27,29,34,35,36,38,39,40,41,42,43,46,48,49,50,51,52,53,54,57,],[12,-28,-27,-9,12,-26,12,12,12,12,12,-8,-11,-30,12,-13,12,12,12,-21,12,12,-10,-29,-25,-12,-23,-22,-24,-20,-19,]),'STRING':([7,11,12,14,15,16,19,21,22,23,24,27,29,34,35,36,38,39,40,41,42,43,46,48,49,50,51,52,53,54,57,],[11,-28,-27,-9,11,-26,11,11,11,11,11,-8,-11,-30,11,-13,11,11,11,-21,11,11,-10,-29,-25,-12,-23,-22,-24,-20,-19,]),'IMPORT':([3,],[8,]),'OUTPUT':([13,],[20,]),'OP_SUB':([13,],[21,]),'OP_ADD':([13,],[22,]),'RPAREN':([11,12,16,17,18,20,24,29,30,32,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,29,36,41,-11,-15,-17,46,-30,49,-13,50,51,52,53,-21,54,-10,-14,-29,-25,-12,-23,-22,-24,-20,57,58,-19,-16,]),'OP_MUL':([13,],[23,]),'OP_DIV':([13,],[19,]),'LBRACE':([0,4,5,6,9,10,26,28,],[1,1,-5,-4,-2,-3,-7,-6,]),'ID':([1,7,8,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[7,16,17,-28,-27,24,-9,16,-26,32,16,32,16,16,16,16,43,-8,-11,-15,44,-17,32,-30,16,-13,32,16,16,16,-21,16,16,-18,56,-10,-14,-29,-25,-12,-23,-22,-24,-20,-19,-16,]),'RBRACE':([11,12,14,15,16,27,29,36,41,46,49,50,51,52,53,54,57,],[-28,-27,-9,26,-26,-8,-11,-13,-21,-10,-25,-12,-23,-22,-24,-20,-19,]),'ASSIGN':([13,],[25,]),'INPUT':([13,],[18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type':([31,],[45,]),'expression_list':([7,],[15,]),'declaration':([18,20,33,37,],[30,30,47,47,]),'program':([0,],[2,]),'parameter_list':([19,21,22,23,24,],[35,38,39,40,42,]),'expression':([7,15,19,21,22,23,24,35,38,39,40,42,43,],[14,27,34,34,34,34,34,48,48,48,48,48,55,]),'statement_list':([0,],[4,]),'declaration_list':([18,20,],[33,37,]),'component':([0,4,],[5,9,]),'import_statement':([0,4,],[6,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',23),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',27),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',31),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',32),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input','parser.py',39),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input','parser.py',40),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output','parser.py',48),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output','parser.py',49),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',75),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_functioncall','parser.py',85),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_functioncall','parser.py',86),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_operator','parser.py',95),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_operator','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_operator','parser.py',97),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_operator','parser.py',98),
  ('expression -> ID','expression',1,'p_identification','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_literal','parser.py',112),
  ('expression -> STRING','expression',1,'p_literal','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',121),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',122),
]
