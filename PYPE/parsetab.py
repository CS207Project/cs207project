
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9CBCE9B237CA7F42BCDABB80C93DB610'
    
_lr_action_items = {'OP_SUB':([16,],[21,]),'OP_ADD':([16,],[25,]),'$end':([1,2,5,6,9,10,19,28,],[0,-5,-4,-1,-3,-2,-7,-6,]),'LBRACE':([0,2,5,6,9,10,19,28,],[3,-5,-4,3,-3,-2,-7,-6,]),'NUMBER':([7,11,12,13,14,15,18,21,22,23,25,26,31,34,35,36,37,38,40,41,42,43,47,48,49,50,51,52,53,54,57,],[14,14,-26,-9,-27,-28,-8,14,14,14,14,14,-11,-30,14,14,14,-13,14,14,-21,14,-10,-29,-23,-24,-25,-12,-22,-20,-19,]),'OP_DIV':([16,],[23,]),'RBRACE':([11,12,13,14,15,18,31,38,42,47,49,50,51,52,53,54,57,],[19,-26,-9,-27,-28,-8,-11,-13,-21,-10,-23,-24,-25,-12,-22,-20,-19,]),'OP_MUL':([16,],[22,]),'IMPORT':([4,],[8,]),'INPUT':([16,],[20,]),'OUTPUT':([16,],[24,]),'STRING':([7,11,12,13,14,15,18,21,22,23,25,26,31,34,35,36,37,38,40,41,42,43,47,48,49,50,51,52,53,54,57,],[15,15,-26,-9,-27,-28,-8,15,15,15,15,15,-11,-30,15,15,15,-13,15,15,-21,15,-10,-29,-23,-24,-25,-12,-22,-20,-19,]),'RPAREN':([12,14,15,17,20,24,26,29,30,31,33,34,35,36,37,38,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-26,-27,-28,28,31,38,42,-17,-15,-11,47,-30,49,50,51,-13,52,53,54,-21,-14,-10,-29,-23,-24,-25,-12,-22,-20,57,58,-19,-16,]),'LPAREN':([0,2,5,6,7,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,57,58,],[4,-5,-4,4,16,-3,-2,16,-26,-9,-27,-28,-8,-7,32,16,16,16,32,16,16,-6,-17,-15,-11,32,-30,16,16,16,-13,32,16,16,-21,16,-14,-10,-29,-23,-24,-25,-12,-22,-20,-19,-16,]),'ID':([3,7,8,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,],[7,12,17,12,-26,-9,-27,-28,26,-8,29,12,12,12,29,12,12,43,-17,-15,-11,44,29,-30,12,12,12,-13,29,12,12,-21,12,-18,56,-14,-10,-29,-23,-24,-25,-12,-22,-20,-19,-16,]),'ASSIGN':([16,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_list':([7,],[11,]),'program':([0,],[1,]),'declaration_list':([20,24,],[33,39,]),'expression':([7,11,21,22,23,25,26,35,36,37,40,41,43,],[13,18,34,34,34,34,34,48,48,48,48,48,55,]),'component':([0,6,],[2,10,]),'declaration':([20,24,33,39,],[30,30,46,46,]),'type':([32,],[45,]),'import_statement':([0,6,],[5,9,]),'parameter_list':([21,22,23,25,26,],[35,36,37,40,41,]),'statement_list':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',23),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',27),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',31),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',32),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input','parser.py',39),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input','parser.py',40),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output','parser.py',48),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output','parser.py',49),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',75),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_functioncall','parser.py',85),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_functioncall','parser.py',86),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_operator','parser.py',95),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_operator','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_operator','parser.py',97),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_operator','parser.py',98),
  ('expression -> ID','expression',1,'p_identification','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_literal','parser.py',112),
  ('expression -> STRING','expression',1,'p_literal','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',121),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',122),
]
