
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '97D9A0CBCA263C88DCE980FFA993FE38'
    
_lr_action_items = {'INPUT':([14,],[20,]),'RPAREN':([12,15,16,17,20,22,26,30,31,32,33,34,35,36,37,39,40,41,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,],[-28,-27,-26,28,30,36,42,-11,46,-17,-15,-30,49,-13,50,52,53,54,-21,55,-10,-14,-29,-23,-12,57,-24,-25,-20,-22,58,-19,-16,]),'ASSIGN':([14,],[23,]),'OP_SUB':([14,],[21,]),'IMPORT':([6,],[10,]),'LBRACE':([0,1,2,4,7,8,19,28,],[5,5,-5,-4,-2,-3,-7,-6,]),'STRING':([9,11,12,13,15,16,18,21,24,25,26,27,30,34,35,36,38,39,40,41,42,43,46,48,49,50,52,53,54,55,57,],[12,-9,-28,12,-27,-26,-8,12,12,12,12,12,-11,-30,12,-13,12,12,12,12,-21,12,-10,-29,-23,-12,-24,-25,-20,-22,-19,]),'RBRACE':([11,12,13,15,16,18,30,36,42,46,49,50,52,53,54,55,57,],[-9,-28,19,-27,-26,-8,-11,-13,-21,-10,-23,-12,-24,-25,-20,-22,-19,]),'OUTPUT':([14,],[22,]),'OP_MUL':([14,],[24,]),'LPAREN':([0,1,2,4,7,8,9,11,12,13,15,16,18,19,20,21,22,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,52,53,54,55,57,58,],[6,6,-5,-4,-2,-3,14,-9,-28,14,-27,-26,-8,-7,29,14,29,14,14,14,14,-6,-11,29,-17,-15,-30,14,-13,29,14,14,14,14,-21,14,-10,-14,-29,-23,-12,-24,-25,-20,-22,-19,-16,]),'NUMBER':([9,11,12,13,15,16,18,21,24,25,26,27,30,34,35,36,38,39,40,41,42,43,46,48,49,50,52,53,54,55,57,],[15,-9,-28,15,-27,-26,-8,15,15,15,15,15,-11,-30,15,-13,15,15,15,15,-21,15,-10,-29,-23,-12,-24,-25,-20,-22,-19,]),'OP_DIV':([14,],[25,]),'ID':([5,9,10,11,12,13,14,15,16,18,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,],[9,16,17,-9,-28,16,26,-27,-26,-8,32,16,32,38,16,16,16,16,44,-11,32,-17,-15,-30,16,-13,32,16,16,16,16,-21,16,-18,56,-10,-14,-29,-23,-12,-24,-25,-20,-22,-19,-16,]),'$end':([1,2,3,4,7,8,19,28,],[-1,-5,0,-4,-2,-3,-7,-6,]),'OP_ADD':([14,],[27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,],[1,]),'expression':([9,13,21,24,25,26,27,35,38,39,40,41,43,],[11,18,34,34,34,34,34,48,51,48,48,48,48,]),'component':([0,1,],[2,7,]),'parameter_list':([21,24,25,26,27,],[35,39,40,41,43,]),'program':([0,],[3,]),'import_statement':([0,1,],[4,8,]),'declaration_list':([20,22,],[31,37,]),'type':([29,],[45,]),'expression_list':([9,],[13,]),'declaration':([20,22,31,37,],[33,33,47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',8),
  ('statement_list -> statement_list component','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement_list import_statement','statement_list',2,'p_statement_list','parser.py',14),
  ('statement_list -> import_statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> component','statement_list',1,'p_statement_list','parser.py',16),
  ('import_statement -> LPAREN IMPORT ID RPAREN','import_statement',4,'p_import_statement','parser.py',23),
  ('component -> LBRACE ID expression_list RBRACE','component',4,'p_component','parser.py',27),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','parser.py',31),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',32),
  ('expression -> LPAREN INPUT declaration_list RPAREN','expression',4,'p_input','parser.py',39),
  ('expression -> LPAREN INPUT RPAREN','expression',3,'p_input','parser.py',40),
  ('expression -> LPAREN OUTPUT declaration_list RPAREN','expression',4,'p_output','parser.py',48),
  ('expression -> LPAREN OUTPUT RPAREN','expression',3,'p_output','parser.py',49),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',57),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',58),
  ('declaration -> LPAREN type ID RPAREN','declaration',4,'p_declaration','parser.py',66),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',67),
  ('type -> ID','type',1,'p_type','parser.py',75),
  ('expression -> LPAREN ASSIGN ID expression RPAREN','expression',5,'p_assign','parser.py',80),
  ('expression -> LPAREN ID parameter_list RPAREN','expression',4,'p_functioncall','parser.py',85),
  ('expression -> LPAREN ID RPAREN','expression',3,'p_functioncall','parser.py',86),
  ('expression -> LPAREN OP_ADD parameter_list RPAREN','expression',4,'p_operator','parser.py',95),
  ('expression -> LPAREN OP_SUB parameter_list RPAREN','expression',4,'p_operator','parser.py',96),
  ('expression -> LPAREN OP_MUL parameter_list RPAREN','expression',4,'p_operator','parser.py',97),
  ('expression -> LPAREN OP_DIV parameter_list RPAREN','expression',4,'p_operator','parser.py',98),
  ('expression -> ID','expression',1,'p_identification','parser.py',108),
  ('expression -> NUMBER','expression',1,'p_literal','parser.py',112),
  ('expression -> STRING','expression',1,'p_literal','parser.py',113),
  ('parameter_list -> parameter_list expression','parameter_list',2,'p_parameter_list','parser.py',121),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','parser.py',122),
]
